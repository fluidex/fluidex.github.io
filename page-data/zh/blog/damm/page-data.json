{"componentChunkName":"component---src-templates-post-template-js","path":"/zh/blog/damm/","result":{"data":{"markdownRemark":{"excerpt":"摘要： 本文提出了一种基于微观指标 (资金量、价格区间、深度等) 设计的 AMM 算法。\n比起传统的常函数做市商（CFMM）算法（及它们的变种）来说，它能更直观地反应市场、更契合流动性提供者的做市需求。 AMM 策略通常使用宏观指标来定义，宏观指标是指描述总量的指标，包括 AMM 池中的交易币种数量(base…","html":"<p><strong>摘要：</strong> 本文提出了一种基于微观指标 (资金量、价格区间<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>、深度等) 设计的 AMM 算法。\n比起传统的常函数做市商（CFMM）算法（及它们的变种）来说，它能更直观地反应市场、更契合流动性提供者的做市需求。</p>\n<p>AMM 策略通常使用宏观指标来定义，宏观指标是指描述总量的指标，包括 AMM 池中的交易币种数量(base amount)和计价币种数量(quote amount)等。例如，最常见的 AMM 做市算法——恒定乘积算法——要求 base 数量 和 quote 数量的乘积在每次交易前后相等。但是实际上对于每个具体交易者而言，微观指标对单次的交易行为更有意义。微观指标是指刻画变化，或者叫刻画边际效应的指标，如当前的买卖盘口价和盘口深度。盘口价格刻画了当前状态下做一笔小交易的平均成交价格，而盘口深度刻画了指定交易价格内最大的成交量。盘口深度可以通俗解释为，假设现在 ETH-USDT 价格为 3450，我希望以不超过 3451 的价格购买尽可能多的 ETH，我最多能买到多少 ETH？</p>\n<p>盘口价格和盘口深度也是 orderbook 视角下更直观的指标。我们希望能从这两个微观指标出发，更好地理解和设计 AMM 算法。</p>\n<h1>数学原理-宏观指标和微观指标的关系</h1>\n<p>本章节会给出价格和深度这两个指标，和 base/quote 量的关系。我们将会看到，价格和深度函数，都可以从 base/quote 函数经过若干次求导/反函数变换推导出来。</p>\n<p>假设交易池中 base 数量和 quote 数量满足如下关系:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">quote = f(base)</code></pre></div>\n<p>则显然有 quote > 0, base > 0. f 单调递减，即 f’ &#x3C; 0（因为交易中，一种 token 增多，另一种当然减少）</p>\n<p>按照定义，价格就是 f 的导数的绝对值（正负原因需要取相反数）。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">price = abs(f&#39;(base)) = -f&#39;(base)</code></pre></div>\n<p>一般我们要求价格(即 -f’)单调递减，即 base 越少，价格越高。因此 f” > 0。综上，合理的 f，必然是一个定义在第一象限的下凸的单调递减函数。</p>\n<p>相应的，盘口深度(depth)实际上是总 base 量对于价格的导数。 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">depth = f2&#39;(price)\nf2 = Inverse(f&#39;) \n\nInverse 表示反函数</code></pre></div>\n<p>上式中，f2 是价格函数的反函数，它的导数就是深度对于价格的函数。</p>\n<p>以上就是 盘口价格/盘口深度 和 base/quote 函数的关系。</p>\n<h1>数学原理-求解</h1>\n<p>对于 AMM 交易池的创建者而言，他最关心的是初始的价格(price0)和深度(depth0)。数学上看，他需要给出一个形如 quote = f(base) 的 AMM 函数，使得这个函数存在一点能够同时满足价格为 price0 且深度为 depth0。  </p>\n<p>换言之，创建者需要解以下的式子：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">已知 depth0, price0。\nf 是描述 base 和 quote 数量的函数 quote = f(base)，求 f ，使其能够满足：\n\n存在 base0 使得 f&#39;(base0) = price0\n(Inverse(f&#39;))&#39;(price0) = depth0\n\n此外要求 f &gt; 0 且 f&#39; &lt; 0 且 f&#39;&#39; &gt; 0，即 f 为第一象限的下凸的单减函数。</code></pre></div>\n<p>上面式子约束太少，实际上有无数组解。f 可以是倒数函数，f 可以是更一般的双曲函数，f 可以是指数函数，f 可以是幂函数。但是下一节我们会看到，如果我们指定某种具体的 f 形式并且控制可以改变的系数，则可能可以确定函数的唯一解。</p>\n<h3>一种解：f 为平移倒数函数时的解</h3>\n<p>如果 f 为倒数函数，形式如下</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">quote = f(base) = C / (base + BASE_DELTA) - QUOTE_DELTA \n\n或者等价地，用多个变量表示\nvQuote = C / vBase\nvQoute = quote + QUOTE_DELTA\nvBase = base + BASE_DELTA\n其中 C BASE_DELTA QUOTE_DELTA 为正的常数</code></pre></div>\n<p>f 为这种形式时，求导得到价格和深度为</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">price = -f&#39;(base) = C / (vBase**2) = vQuote / vBase\ndepth = vBase**2 / (2 * vQuote)</code></pre></div>\n<p>按照 price0 处深度为 depth0 的条件，可以解得：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C = vBase0 * vQuote0 = 4 * price0**3 * depth0**2\nvQuote0 = 2 * price0**2 * depth0 = quote0 + QUOTE_DELTA\nvBase0 = 2 * price0 * depth0 = base0 + BASE_DELTA</code></pre></div>\n<p>则最终 AMM 函数 quote = f(base) 为</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">quote = f(base) = C / (base + BASE_DELTA) - QUOTE_DELTA,\n其中 C = 4 * price0**3 * depth0**2, BASE_DELTA QUOTE_DELTA 为任意常数。</code></pre></div>\n<p>综上，我们展示了如果指定 f 为倒数函数，则可以通过 price 和 depth 得到唯一函数解。虽然 f 实际上可以是无数多种函数类型，但是简化起见，我们后文都将使用倒数函数来作为我们的最终 AMM 函数。</p>\n<h1>Differential AMM 的公式定义</h1>\n<p>将上一节中所有的推导汇集在一起，我们可以得到 Differential AMM 的完整定义：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">quote = f(base) = C / (base + BASE_DELTA) - QUOTE_DELTA</code></pre></div>\n<p>DAMM 所有相关参数含义：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>price0</td>\n<td>初始盘口价</td>\n</tr>\n<tr>\n<td>depth0</td>\n<td>初始盘口深度</td>\n</tr>\n<tr>\n<td>lowPrice</td>\n<td>最低自动做市价，最低可以是0</td>\n</tr>\n<tr>\n<td>highPrice</td>\n<td>最高自动做市价，最高可以是正无穷</td>\n</tr>\n<tr>\n<td>quote0</td>\n<td>初始真实 quote 资金量</td>\n</tr>\n<tr>\n<td>base0</td>\n<td>初始真实 base 资金量</td>\n</tr>\n<tr>\n<td>QUOTE_DELTA</td>\n<td>虚拟 quote 资金量</td>\n</tr>\n<tr>\n<td>BASE_DELTA</td>\n<td>虚拟 base 资金量</td>\n</tr>\n<tr>\n<td>C</td>\n<td>恒定乘积</td>\n</tr>\n<tr>\n<td>vQoute0</td>\n<td>初始总体 quote 量，真实加虚拟</td>\n</tr>\n<tr>\n<td>vBase0</td>\n<td>初始总体 base 量，真实加虚拟</td>\n</tr>\n</tbody>\n</table>\n<p>相关参数关系：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(1) C = 4 * price0**3 * depth0**2\n(2) lowPrice = QUOTE_DELTA**2 / C\n(3) highPrice = C / BASE_DELTA**2\n(4) price0 = vQuote0 / vBase0\n(5) depth0 = vBase**2 / (2 * vQuote)\n(6) vQoute0 = 2 * price0**2 * depth0\n(7) vBase0 = 2 * price0 * depth0\n(8) vQoute0 = quote0 + QUOTE_DELTA\n(9) vBase0 = base0 + BASE_DELTA</code></pre></div>\n<p>注意1: 值得指出的是，上述式子中，(4)(5) 和 (6)(7) 是等价的。</p>\n<p>注意2: 同等 price0 depth0 时，QUOTE_DELTA 和 BASE_DELTA 越小，base0 quote0 越大，即提供同样盘口流动性的资金量越大，所谓“资金效率”越低，但是做市的价格范围（lowPrice到highPrice）也越大。极端地，当 QUOTE_DELTA 和 BASE_DELTA 为 0 时，lowPrice 将为 0，highPrice 为无穷大，此时 DAMM 蜕化为普通恒定乘积 AMM。我们可以通过调节 lowPrice highPrice，任意地调节资金效率。</p>\n<p>实际使用中，我们对于以下三组六个参数 (1) depth price (2) lowPrice highPrice (3) quote0 base0，已知任意两组，都可以推导出第三组参数和完整的做市函数。</p>\n<p>下面三种不同初始条件对应的 DAMM 应用场景。</p>\n<h3>给定盘口价格深度，和初始做市资金量</h3>\n<p>即在方程组中，已知 price0 depth0, 和 quote0，base0，需要计算做市价格范围和其他所有剩余参数。</p>\n<p>具体求解见： <a href=\"https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L39\">https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L39</a></p>\n<h3>给定盘口价格深度，和做市价格范围</h3>\n<p>即在方程组中，已知 price0 depth0, 和 lowPrice（可以为 0），highPrice（可以为  Infinity），需要计算出初始做市资金量和其他所有剩余参数。</p>\n<p>具体求解见：<a href=\"https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L53\">https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L53</a></p>\n<h3>给定做市价格范围，和初始做市资金量</h3>\n<p>此种情况最为复杂。实际上等价于解一个二元二次方程。通过解这个方程我们也可以得到所有剩余参数。</p>\n<p>具体求解：<a href=\"https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L72\">https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L72</a></p>\n<p>从上面三种应用场景可以看到 DAMM 具有极大的灵活性。灵活性一方面体现在，不同的场景可能有不同的做市需求和不同的初始条件，在以上三种不同的初始条件情况下，我们都能求解出一个正确的 DAMM 策略。灵活性另一方面体现在，<strong>我们可以通过价格范围或初始资金量，任意调节做市资金效率</strong>。</p>\n<h1>其他</h1>\n<h2>从 AMM 到 orderbook 的转化</h2>\n<p>将 AMM 曲线分段近似，就可以得到一份离散化 orderbook。在 <a href=\"https://github.com/fluidex/differential-amm/blob/673b2801c822bc5e75dc63f1def0204b8d57bb03/main.ts#L156\">参考实现代码</a> 中，我们可以指定价格 interval 和 order 数量，通过计算 base delta 和 quote delta，得到订单大小和平均价格。</p>\n<h2>数学等价性</h2>\n<p>容易看出 DAMM 在数学上等价于 (x + a)(y + b) = k 的做市算法。不同之处在于我们给了很多的微观诠释，也指出了多种不同的从初识条件求解的可能性。</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>虽然 Uniswap V3 也支持在一定价格区间内做市，但它们不支持在确定区间内调节配资比例，更无法支持单边做市。</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","frontmatter":{"title":"Differential AMM: 一种基于微观指标设计的灵活 AMM 算法","tags":["technical"],"date":"2021-05-19T00:00:00.000Z","description":null}},"prev":{"frontmatter":{"title":"FluiDex 2021年5月 开发进展"},"fields":{"slug":"/zh/blog/2021-05-27-updates/"}},"next":{"frontmatter":{"title":"ZK-Rollup 开发经验分享 Part I"},"fields":{"slug":"/zh/blog/zkrollup-intro1/"}}},"pageContext":{"slug":"/zh/blog/damm/","prevSlug":"/zh/blog/2021-05-27-updates/","nextSlug":"/zh/blog/zkrollup-intro1/","langKey":"zh"}},"staticQueryHashes":["2555585279","2841359383","3159585216"]}